ian@ian-HP-Stream-Laptop-11-y0XX:~$ gfortran xshell.f08 -o xshell
ian@ian-HP-Stream-Laptop-11-y0XX:~$ cat xshell.f08
program xshell
! driver for shell routine
integer i, j
real a(100) 
integer,parameter :: seed = 86456
call srand(seed)
open(8,file="tarray.dat",status="old")
write(8,9010) rand(), rand(), rand(), rand(),rand()
write(8,9010) rand(), rand(), rand(), rand(),rand()
write(8,9010) rand(), rand(), rand(),  rand(),rand()
write(8,9010) rand(), rand(), rand(), rand(),rand()
write(8,9010) rand(), rand(), rand(), rand(),rand()
write(8,9010) rand(), rand(), rand(), rand(),rand()
write(8,9010) rand(), rand(), rand(), rand(),rand()
write(8,9010) rand(), rand(), rand(), rand(),rand()
write(8,9010) rand(), rand(), rand(), rand(),rand()
write(8,9010) rand(), rand(), rand(), rand(),rand()
write(8,9010) rand(), rand(), rand(), rand(),rand()
write(8,9010) rand(), rand(), rand(), rand(),rand()
write(8,9010) rand(), rand(), rand(),  rand(),rand()
write(8,9010) rand(), rand(), rand(), rand(),rand()
write(8,9010) rand(), rand(), rand(), rand(),rand()
write(8,9010) rand(), rand(), rand(), rand(),rand()
write(8,9010) rand(), rand(), rand(), rand(),rand()
write(8,9010) rand(), rand(), rand(), rand(),rand()
write(8,9010) rand(), rand(), rand(), rand(),rand()
write(8,9010) rand(), rand(), rand(), rand(),rand()
9010 format(5f10.8)
close(8)
open(7,file="tarray.dat",status="old")
read(7,9010) (a(i),i=1,100)
close(7)
! print original array
write(*,*) "original array"
    do  i = 1, 10
     write(*,"(1x,10f7.2)") (a(10*(i-1)+j),j=1,10)
     end do
! sort array
call shell(100,a)
! print sorted array
write(*,*) "sorted array:"
   do i=1,10
   write(*,"(1x,10f7.2)") (a(10*(i-1)+j),j=1,10) 
   end do
   END
   
   SUBROUTINE shell(n,a)
INTEGER n
REAL a(n)
!Sorts an array a(1:n) into ascending numerical order by Shellâ€™s method (diminishing in-
!crement sort). n is input; a is replaced on output by its sorted rearrangement.
INTEGER i,j,inc
REAL v
inc=1
!Determine the starting increment.
1 inc=3*inc+1
if(inc.le.n)goto 1
2 continue
!Loop over the partial sorts.
inc=inc/3
do 11 i=inc+1,n
! Outer loop of straight insertion.
v=a(i)
j=i
3 if(a(j-inc).gt.v)then
! Inner loop of straight insertion.
a(j)=a(j-inc)
j=j-inc
if(j.le.inc)goto 4
goto 3
endif
4 a(j)=v
11 enddo
if(inc.gt.1)goto 2
return
END

ian@ian-HP-Stream-Laptop-11-y0XX:~$ ./xshell
 original array
    0.68   0.23   0.61   0.06   0.92   0.34   0.29   0.93   0.25   0.81
    0.06   0.66   0.94   0.97   0.08   0.76   0.89   0.55   0.58   0.91
    0.17   0.62   0.56   0.82   0.20   0.15   0.92   0.22   0.64   0.13
    0.70   0.59   0.64   0.59   0.70   0.82   0.40   0.22   0.13   0.72
    0.99   0.37   0.33   0.13   0.69   0.13   0.61   0.24   0.41   0.38
    0.07   0.78   0.03   0.35   0.61   0.55   0.35   0.77   0.50   0.15
    0.69   0.03   0.54   0.31   0.13   0.25   0.79   0.40   0.91   0.05
    0.13   0.39   0.38   0.00   0.84   0.13   0.36   0.06   0.48   0.80
    0.77   0.59   0.86   0.09   0.17   0.81   0.03   0.22   0.13   0.40
    0.10   0.36   0.37   0.59   0.32   0.18   0.86   0.64   0.09   0.36
 sorted array:
    0.00   0.03   0.03   0.03   0.05   0.06   0.06   0.06   0.07   0.08
    0.09   0.09   0.10   0.13   0.13   0.13   0.13   0.13   0.13   0.13
    0.13   0.15   0.15   0.17   0.17   0.18   0.20   0.22   0.22   0.22
    0.23   0.24   0.25   0.25   0.29   0.31   0.32   0.33   0.34   0.35
    0.35   0.36   0.36   0.36   0.37   0.37   0.38   0.38   0.39   0.40
    0.40   0.40   0.41   0.48   0.50   0.54   0.55   0.55   0.56   0.58
    0.59   0.59   0.59   0.59   0.61   0.61   0.61   0.62   0.64   0.64
    0.64   0.66   0.68   0.69   0.69   0.70   0.70   0.72   0.76   0.77
    0.77   0.78   0.79   0.80   0.81   0.81   0.82   0.82   0.84   0.86
    0.86   0.89   0.91   0.91   0.92   0.92   0.93   0.94   0.97   0.99
ian@ian-HP-Stream-Laptop-11-y0XX:~$ 

