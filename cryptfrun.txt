ian@ian-Aspire-One-753:~$ cp cypt.f crypt.f
ian@ian-Aspire-One-753:~$ gfortran crypt.f -o crypt
ian@ian-Aspire-One-753:~$ ./crypt
 WE BAD*
 B
 A
 D
 A            1
 B            1
 D            1
ian@ian-Aspire-One-753:~$ cat crypt.f
C Fortran 77 to exercise 13, page 155, chapter 1.3.2 d. knuth, 
C fundamental algorithms vol 1 knuth the art of computer programming
C second edition, by IAN MARTIN AJZENSZMIDT melbourne Australia march 11
C 2021
C "Cryptanalyst problem"        
        
        character table(1000)
        character buf1(14)
        integer n, n3, sc, nb,ac, bc, dc
        data table /"W","E"," ","B","A","D","*",993*" "/               
        sc = 0
        nb = 0
        n =0
        n3 = 0
        ac = 0
        bc= 0
        dc = 0
        n3 = n3 + 1
        read(table,9008)(buf1(n),n=1,7)
        print *, buf1
 9008   format(a7) 
 !       do while(x(n3).ne."*")
         do while((buf1(n3) .ne."*") .and. (n3.le.7))
        
        if (buf1(n3) .eq. "A" ) then 
        ac = ac + 1
         print *,"A"
         endif 
        if  (buf1(n3) .eq. "B") then 
        bc = bc + 1
        print *,"B"
        endif
        if (buf1(n3) .eq. "D") then
        dc = dc + 1 
        print *, "D"  
        endif
        if(buf1(n3) .ne. " ") then
        nb = nb + 1 
        
        
        endif
        
        if (n3 .lt. 14) n3 = n3 + 1
        end do
        print *,"A ",ac
        print *, "B ", bc
        print *, "D ", dc
        end program            
             
ian@ian-Aspire-One-753:~$ sloccount crypt.f
Have a non-directory at the top, so creating directory top_dir
Adding /home/ian/crypt.f to top_dir
Categorizing files.
Finding a working MD5 command....
Found a working MD5 command.
Computing results.


SLOC	Directory	SLOC-by-Language (Sorted)
37      top_dir         fortran=37


Totals grouped by language (dominant language first):
fortran:         37 (100.00%)




Total Physical Source Lines of Code (SLOC)                = 37
Development Effort Estimate, Person-Years (Person-Months) = 0.01 (0.08)
 (Basic COCOMO model, Person-Months = 2.4 * (KSLOC**1.05))
Schedule Estimate, Years (Months)                         = 0.08 (0.94)
 (Basic COCOMO model, Months = 2.5 * (person-months**0.38))
Estimated Average Number of Developers (Effort/Schedule)  = 0.08
Total Estimated Cost to Develop                           = $ 848
 (average salary = $56,286/year, overhead = 2.40).
SLOCCount, Copyright (C) 2001-2004 David A. Wheeler
SLOCCount is Open Source Software/Free Software, licensed under the GNU GPL.
SLOCCount comes with ABSOLUTELY NO WARRANTY, and you are welcome to
redistribute it under certain conditions as specified by the GNU GPL license;
see the documentation for details.
Please credit this data as "generated using David A. Wheeler's 'SLOCCount'."
ian@ian-Aspire-One-753:~$ 

